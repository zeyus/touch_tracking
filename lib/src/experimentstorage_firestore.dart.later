// import 'package:firebase_core/firebase_core.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:touchtracker/src/experimentstorage.dart';

class ExperimentStorageFireBase extends ExperimentStorage {
  // write subject log to firebase
  @override
  Future<bool> write(List<List<dynamic>> data,
      {key = '', update = false}) async {
    CollectionReference experiments =
        FirebaseFirestore.instance.collection('experiments');

    QuerySnapshot existingExp =
        await experiments.where('experiment_id', isEqualTo: key).get();

    DocumentReference? expRef;

    if (existingExp.size == 0) {
      expRef = await experiments.add({'experiment_id': key});
    } else {
      expRef = experiments.doc(existingExp.docs.first.id);
    }

    // loop through data and add to firebase
    List<String> columnLabels =
        data.removeAt(0).map((item) => item as String).toList();
    for (List<dynamic> row in data) {
      // map columnlabels to rows
      Map<String, dynamic> rowMap =
          Map<String, dynamic>.fromIterables(columnLabels, row);
      await expRef.collection('tracking_item').add(rowMap);
    }

    return true;
  }
}
